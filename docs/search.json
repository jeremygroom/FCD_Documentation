[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Forest Carbon Dashboard Documentation",
    "section": "",
    "text": "1 Preface\nWelcome to the documentation for the Forest Carbon Dashboard. The Forest Carbon Dashboard conveys the state of carbon and carbon change (flux) for regions of land. The United States Department of Agriculture’s Forest Inventory Analysis Program generates the information used in the dashboard. The information is processed and provided by FIA staff to regional (i.e., state-level) parties such as Cal Fire. Cal Fire and the Oregon Department of Forestry (another user of this information) produce reports that provide summaries of ecosystem carbon for their regions on a semi-annual basis. One example is the report by Christensen et al. (2021). The motivation for the dashboard is the effort and size of the report: automating the process to the extent possible provides both publishers and readers with an efficient way to approach the sizable amount of data these projects generate. The motivation for this document is to provide users with an understanding of how to use the dashboard and how they can upload and view their own information.\nThe goal of the dashboard is to make ecosystem carbon data accessible to all. This includes the ability of users to browse and specify which data tables and figures they would like to use, and download the figures and the source data. It also includes the ability of users to upload their own data.\n\n\n2 Acknowledgements\nMany thanks to Nadia Tase (California Department of Forestry and Fire Protection - CAL FIRE) and Olaf Kuegler (USDA Forest Service, Retired) for supporting the development of this work through feedback, discussion, and data revision. Amanda Reynolds (CAL FIRE) provided administrative support. This work builds upon the many revisions and iterations of the AB 1504 California Forest Ecosystem and Harvested Wood Product Carbon Inventory reports. Who at CalFire did the figure coding?\nThis project was funded by the California Department of Forestry and Fire Protection Purchase Order 3540-0000678085.\n\n\n\n\nChristensen, Glenn A, Andrew N Gray, Olaf Kuegler, Nadia A Tase, Mark Rosenberg, and Jeremy Groom. 2021. AB 1504 California Forest Ecosystem and Harvested Wood Product Carbon Inventory: 2019 Reporting Period Data Update. Sacramento, CA: California Department of Forestry; Fire Protection; California Board of Forestry; Fire Protection. https://bof.fire.ca.gov/media/beddx5bp/6-final_forest_ecosys_hwp_c_2019_feb2021_all_ada.pdf.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "app_usage.html",
    "href": "app_usage.html",
    "title": "3  Dashboard Summary and Use",
    "section": "",
    "text": "3.1 App Overview\nThe dashboard is a tool primarily designed for presenting forest carbon estimates as figures and tables. It secondarily incorporates harvested wood products (HWP) information as well, relying on HWP data processed by an external HWP model.\nThe dashboard relies on data summaries provided by the USDA Forest Service of Forest Inventory Analysis (FIA) databases. Currently the dashboard displays FIA and HWP data for California, for data collected up to 2020 and 2021.\nUsers can explore figures under the Figures tab, Tables under the Tables tab, or upload their own data, view the source files at GitHub, or access this documentation under the Documentation and Data Upload tab. Users can find author contact information at the Contact Us tab. Below all tables and figures are written explanations of what each is displaying.\nIf users upload their own data to the app, they can select between California data sets and their own in the Select a region and Select a year drop-down menus at any time.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dashboard Summary and Use</span>"
    ]
  },
  {
    "objectID": "data_prep.html",
    "href": "data_prep.html",
    "title": "4  Preparing Your Data",
    "section": "",
    "text": "4.1 Your data folder\nUsers provide a suite of folders that follow this format:\nNotice that the parent folder is called “California 2020”. The subfolders with years in them (CSV Status, GRM CSV, LU) need to have the same year in their name, which is the user’s year of interest. This is important! The script will look for these files with these year.\nBe sure to include all of these folders! The code may get unhappy if they are missing. Include the folders but leave them empty if you have nothing to put in them (e.g., Annual_FMRL and LU 2020 may be specific to California and a few other states).\nThe USDA Forest Service FIA program personnel can provide the CSV files that populate these folders. It should be evident which go where (they will give you CSV Status and GRM CSV folders, for instance).\nWe will now spend a great deal of verbiage describing what goes into Script_Controls.xlsx.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Preparing Your Data</span>"
    ]
  },
  {
    "objectID": "data_prep.html#your-data-folder",
    "href": "data_prep.html#your-data-folder",
    "title": "4  Preparing Your Data",
    "section": "",
    "text": "Figure 4.1: Required structure of data input folders and the script control Excel file.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Preparing Your Data</span>"
    ]
  },
  {
    "objectID": "data_prep.html#features-of-table-and-figure-scripts",
    "href": "data_prep.html#features-of-table-and-figure-scripts",
    "title": "4  Preparing Your Data",
    "section": "4.2 Features of table and figure scripts",
    "text": "4.2 Features of table and figure scripts\nThe table and figure scripts were built with flexibility in mind.\n- CSV files provided by the FIA may change from year to year in column titles. The code finds key words or phrases in each target column and gives those columns specific names, which it then works with to create the figure or table.\n- The Script_Control.xlsx file allows users to control the terms that the table and figure scripts search for, use, and display. The scripts are built to be agnostic towards column values, relying entirely on what the user provides. The user must check columns to verify that the column values being sought exist and have not been altered.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Preparing Your Data</span>"
    ]
  },
  {
    "objectID": "data_prep.html#general-data-set-and-script-control-features",
    "href": "data_prep.html#general-data-set-and-script-control-features",
    "title": "4  Preparing Your Data",
    "section": "4.3 General data set and script control features",
    "text": "4.3 General data set and script control features\n\n4.3.1 Data set features\nThe CSV files provided by FIA staff may have extremely long file names. The names are so long that we recommend that users save the files close to their root directory. This hopefully allows users the ability of opening the CSV files. It is necessary for users to open these files so that they can verify that the items listed in Script_Control.xlsx tabs are accurate or need updated. The code in the app is constructed to search for files using a unique string that is shorter than the actual file name.\n\n\n4.3.2 Script control features\nThe file Script_Control.xlsx (Script Control) provides specific information to the app on how to label files, where to find files, how to cope with specific features of CSV data files, and what processes to run. There are three distinct parts to Script Control: the Global tab, Fig tabs, and Tab tabs.\nThe Global tab contains general information on the region and years to be examined, ecoregions and ownerships specific to users’ data, color palates to be used for ownerships, forest types, carbon stocks, Growth removal and mortality (GRM) fates, etc. There are also columns specific to running the Harvested Wood Products (HWP) model. These features help define aspects for all figures and tables, from caption text to figure colors and table categories.\nThe Fig tabs control all figures generated. Each Fig tab controls the creation of one or a few similar figures. The tabs provide information on what file names the code should search for, which folder to search in, specific figure text to provide, and figure control information.\nThe Tab tabs control all tables generated. Like the Fig tabs, the Tab tabs control the creation of one or a few tables. Many of the columns are the same and serve the same function as the Fig tabs. Some columns can offer specific information that is needed to generate a table. Some Tab tabs are used repeatedly on different data set or require the combination of separate data sets to produce a single table.\nTable and figure tabs were created around the tables and figures listed in Christensen et al. (2021). We recommend that users review that source (or the app output) to orient themselves regarding which data sets are relevant to which tables and figures.\n\n\n4.3.3 The Global Tab\nThis section describes important aspects of the Script Control’s Global Tab. The user should review and alter all of these settings to align with their data and needs.\n\nREGION: This is the name of the region in question. Specifically, as can be seen in Figure 4.1, the parent folder is named “California 2020”. The REGION for this fold is ‘California’. The user should set their REGION similarly.\nYEAR: Like REGION, this should be set to the appropriate year for the data and it will/is be part of the parent folder’s title.\nEARLY.YRS and CURRENT.YRS: Years are broken into two sets. CURRENT.YRS are the most recent ten years ending in YEAR. EARLY.YRS are the ten years prior to CURRENT.YRS.\nECOREGIONS: A list of ecoregions used within data sets and potentially in data CSV file names.\nOWNERSHIPS: This is a list of ownership names that show up repeatedly within CSV data files. Ensure that the spelling is consistent with data file values.\nOWNERSHIP.COLORS: The hexadecimal codes used for ownerships. Be sure the number of OWNERSHIP.COLORS matches OWNERSHIPS.\nRESERVED.TYPES, RESERVED.COLORS: Like OWNERSHIPS, these columns include forest type names by reserve status and the associated hexidecimal colors, respectively. Be sure the two columns are of equal length.\nSTOCKS, STOCK.COLORS: Like OWNERSHIPS, these columns include carbon stock types by physical location on the landscape (e.g., roots, standing dead) and their associated hexidecimal colors, respectively. Be sure the two columns are of equal length.\nGRM.TYPES, GRM.COLORS: Like OWNERSHIPS, these columns include carbon associated with stand growth/removal/mortality categories (e.g., Fire, Gross Tree Growth) and their associated hexidecimal colors, respectively. Be sure the two columns are of equal length.\nOWNERSHIP.RESERVED.TYPES, OWNERSHIP.RESERVED.COLORS: These columns list general ownership types that include public reserved and unreserved lands and their associated hexidecimal colors, respectively. Be sure the two columns are of equal length.\nRUN.HWP: This column indicates whether the app upload (Chapter 4) or stand-alone (Chapter 5) code should attempt to run the HWP model (TRUE) or forego running the model (FALSE). It is primarily useful for the stand-alone script run on one’s own computer. The app relies on users to select whether or not they want HWP data to be run, bypassing the importance of this setting.\nSOURCE.GIT: This setting is also only used in the stand-alone setting. Users may enter four options here: “OWN.DIR”, “CA”, “WA”, and “OR”. One of the three state abbreviations will cause the code to obtain the state’s HWP data from the HWP GitHub repository. “OWN.DIR” indicates that the user has their own HWP data they would like incorporated in the tables. The app by default selects “OWN.DIR”.\nOWN.HWP.DIR: This option also is only relevant for users running the stand-alone script. Under this column heading the user lists is the folder location and file name for the user’s HWP data when they entered “OWN.DIR” for the column “SOURCE.GIT”. We recommend placing the Excel file in the repository’s base file (wherever getwd() is for the project) and just listing the file’s Excel name; e.g., ‘Some_Data.xlsx’. This simplifies what is entered. For instance, entering ‘/MyData/Home/Some_Data.xlsx’ opens oneself up to problems (was that initial backslash needed? Is the file path full and correct? Is the file path in relation to the working directory or the main directory?).\n\n\n\n4.3.4 General Figure and Table Tab Settings\nWith the exceptions of Tab 6 and Tab 7, all table and figure tabs share certain columns.\n\nDAT.FILE: This is the unique string used to identify a data table used in a figure or table. For instance, Fig2.4 has a DAT.FILE listed as ‘Figure_2.4_Percent’. The data file names are usually much longer than the DAT.FILE entry.\nDAT.TABLE.LOC: The location of the data table is stated here. It is used to identify the folder listed in Figure 4.1 generically. Users can enter ‘CSV.STATUS’, ‘GRM.CSV’, ‘LU.CSV’, or ‘FMRL.CSV’. These generic versions of the folder names are used to facilitate code execution.\n\nDAT.FILE and DAT.TABLE.LOC are used together for opening CSV files. The DAT.FILE string is searched for in file names found in the DAT.TABLE.LOC folders. There can be multiple DAT.FILE files listed for certain tables and figures with a single DAT.TABLE.LOC (see Tab4.12 and Figure 4.12). Two data tables may be needed from different folders, in which case the DAT.FILE and DAT.TABLE.LOC can have entries that correspond by row. For Tab4.2a, DAT.FILE = ‘Table 4.2a_’ and ‘_LuseC’ while DAT.TABLE.LOC = ‘GRM.CSV’ and ‘LU.CSV’.\n\nFIG.NAME: This applies to figure tabs only. This value is the name of the figure that is to be produced and saved by the code. This value affects users running the stand-alone code, not the app.\nINCREMENT: Some figure tabs have this column. It represents the plotting increment to use on the y axis.\nIS_CO2e: Yes/No. This applies to some figure tabs. The associated figure code has option for providing results in \\(CO_2e\\) or \\(CO_2\\). The default setting is “Yes”, \\(CO_2e\\). This option was developed because previous versions of the figure were produced in \\(CO_2\\) but current reporting metrics rely on \\(CO_2e\\).\nTAB.CAP: This applies to some tables. There may be a reference to repeated tables in the appendix in which case this option controls the appendix reference.\n\nFrequently for a table or figure tab there will be groups of three columns with a heading of _.LISTED, _.USE, _.ORDER (e.g., OWNER.LISTED, OWNER.USE, OWNER.ORDER) that are specific to the table or figure’s parent data set. One table or figure can have more than one of these sets of columns. The _.LISTED column indicates the values listed in a column that are of interest. The _.USE column allows the user to specify how the _.LISTED items are displayed (e.g., “Private Corporate” instead of “Corporate”). The ._ORDER column allows the user to specify the display order of the items in a figure; this column is not always present. Note that the _.USE and _.ORDER columns may repeat values for different _.LISTED values, as the table or figure script is combining these values.\n\n4.3.4.1 Specific Figure Information\nBelow are descriptions of each figure and figure-specific settings.\nFig2.4\nPercent of forest land base by landowner and reserve status.\n- The columns ‘combine’ and ‘combine_order’ are used to lump certain combinations of ‘Ownership’, ‘ReservedStatus’, and ‘Forest Type’ with the category ‘Other Forest Land’. Some ownerships/reserved status combinations combine ‘Productive’ and ‘Timberland’ with ‘Other Forest Land’ and other combinations do not. These may be adjusted to suit user needs.\n- FOR.TYPE.LISTED: Note that there may be formatting issues with the provided CSV listed forest types. The code attempts to sidestep these peculiarities. The figure-producing script (Fig2.4.R) and associated functions (Functions.R) should be able to produce a working version of this figure without the \\xb9 text in this column.\nFig4.1 Region’s average annual net forestland \\(CO_2e\\) flux by owner, comparing findings from the initial 10 years with most recent 10 years.\n- No other figure-specific columns.\nFig4.2\nRegion’s average annual net forestland \\(CO_2e\\) flux by pool and owner, comparing findings from the initial 10 years with most recent 10 years.\n- POOL.LISTED: For California 2020 and 2021 data, the listed category ‘Foliage’ is not found by the QA, nor is it in the data set. It was present in earlier versions of the figure for California. The SC will still work and the figure will be plotted.\nFig4.3\nRegion’s average annual net timberland \\(CO_2e\\) flux by pool and owner, comparing findings from the initial 10 years with most recent 10 years.\n- No other figure-specific columns.\nFig4.4a\nRegion’s forestland average annual net \\(CO_2e\\) flux in above-ground live carbon by owner, comparing findings from the initial 10 years with most recent 10 years.\n- No other figure-specific columns.\nFig4.4b\nRegion’s timberland/reserved productive forestland average annual net \\(CO_2e\\) flux in above-ground live carbon by ownership, comparing findings from the initial 10 years with most recent 10 years.\n- No other figure-specific columns.\nFig4.6a\nEcoregions’ average annual net \\(CO_2e\\) flux by pool and owner, comparing findings from the initial 10 years with most recent 10 years.\n- This figure relies on several different CSV files, one per ecoregion.\n- Like Fig4.2, ‘Foliage’ does not appear in the data set but did appear in earlier versions of this figure for California.\nFig4.6b\nRegion forestland avera annual net \\(CO_2e\\) flux by ecoregion, comparing findings from the initial 10 years with most recent 10 years.\n- POOL.COLOR: This column provides hexcode color values for carbon pools.\nFig4.8\nRegion average forest carbon stock by owner, \\(CO_2e\\).\n- No other figure-specific columns.\nFig4.9_4.10 This tab provides information for the region’s average carbon stock by poo and owner (Figure 4.9) and land status and owner (Figure 4.10).\n- Both figures rely on the same CSV data set.\n- The columns POOL.LISTED1, POOL.LISTED2, POOL.USE, and POOL.ORD are used together but are not processed in the same fashion as other column sets (e.g., the OWNERS columns in this tab). POOL.LISTED1 and POOL.LISTED2 are used together to match with two columns in the CSV data in a left_join() function by the Fig4.9_4.10.R code.\nFig4.11\nRegion average forest carbon stock by land status and ecoregion.\n- No other figure-specific columns.\nFig4.12\nRegion average carbon stock by pool and forest type.\n- This tab is used to inform/produce Figure 4.12 as well as the ecoregion figures for A1.x.1 (x = ecoregion number, the combination references Appendix section A1, figure A1.x.1 in Christensen et al. (2021)). Under DAT.FILE the first file listed is for the entire region, the others reference specific ecoregions. Be sure the Global tab ecoregion order matches the order of ecoregion files under DAT.FILE.\n- The script produces two figures, one for \\(CO_2e\\) and the other for \\(CO_2\\).\nFig4.13\nRegion average carbon stock by land status and forest type, metric tons \\(CO_2\\) and \\(CO_2e\\) per acre.\n- This tab is used to inform/produce Figure 4.13 as well as the ecoregion figures for A1.x.2 (x = ecoregion number, the combination references Appendix section A1, figure A1.x.2 in Christensen et al. (2021)). Under DAT.FILE the first file listed is for the entire region, the others reference specific ecoregions. Be sure the Global tab ecoregion order matches the order of ecoregion files under DAT.FILE.\n- The script produces two figures, one for \\(CO_2e\\) and the other for \\(CO_2\\).\nFig4.14 Region carbon density by pool and forest type, metric tons \\(CO_2\\) and \\(CO_2e\\) per acre.\n- DAT.FILE: A carbon accounting CSV file and acreage data file are used to calculate metric tons per acre.\n- The script produces two figures, one for \\(CO_2e\\) and the other for \\(CO_2\\).\n\n\n4.3.4.2 Specific Table Information\nBelow are descriptions of each table and table-specific settings.\nTab4.1\nRegion average annual net \\(CO_2e\\) flux from forest pools in forest land remaining forest land, comparing findings from the initial 10 years with most recent 10 years.\n- NET.REMOVE: This value can be blank. In 2020 the California data set included a carbon pool value labeled ‘NET FLUX’. That row was not needed and was removed. Therefore, this entry serves to remove up to one carbon pool.\nTab4.2a\nRegion average annual net \\(CO_2e\\) flux from forest pools, non-\\(CO_2\\) emissions from forest fires in forest remaining forest land, and changes due to forest land conversion. The table compares findings from the initial 10 years with most recent 10 years.\n- DAT.FILE, DAT.TABLE.LOC: Two separate tables are required, one from the LU folder.\nTab4.2b\nAverage annual net \\(CO_2e\\) flux from forest ecosystem pools and non-CO2 emissions from forest fires in Forest land remaining forest land.\n- POOL4.2b.FPD.LEVELS: Note that the first entry here is “Forest Practice District”. See the associated table; this row will be blank. This column is not associated with the other POOL columns directly which is why it is OK that its length is or can be different.\nTab4.3\nRegion-wide estimate of average annual net carbon flux in \\(CO_2e\\) by pools and owner. Changes in \\(CO_2e\\) due to land-use and non-\\(CO_2\\) greenhouse gas emissions are not included. The table compares findings from the initial 10 years with most recent 10 years.\n- No other table-specific columns.\nTab4.6\nThis tab controls the creation of 4+ tables: Average Annual Net Change in Carbon Stocks for Aboveground Pools on Forest Land by Disturbance, Forest Land Status and Owner Group by:\n* The entire region\n* All counties\n* All national forests\n* All forest practice districts or the equivalent (e.g., Oregon has Forest Practice Areas). The number of these is flexible but must correspond to avaliable CSV data.\n- DAT.FILE: The order of data files is Region (State), County, National Forests, and then one per Forest Practice District or equivalent. - REG.COUNTIES.APP.TABLE.4.6 is a reference list that should probably have been listed as TAB.CAP. See TAB.CAP, above.\n- _.LEVELS columns are the ordered values from different columns. Users should be sure that their respective data column levels are captured here. There was not an effort to clean up displayed level names; names from the CSV file are used.\nTab4.7\nAnnual Net Emissions of Non-\\(CO_2\\) Greenhouse Gases from Fire; actually includes \\(CO_2\\).\n- The script sources Tab4.6.R because it combines information from that table with the CSV file listed for this table.\n- GENOWNER._, OWNER._, TYPE_ columns: These four columns are used together. The table has two ‘Total’ columns, one for private forest and one for everything (in the script this is referred to as the ‘Gen.Total’). The blank cells are filled in by the script as ‘Gen.Total’. This could be confusing, but the user should examine Table 4.7, this tab, and their CSV table and ensure that everything lines up. If not, the user should make adjustments to the values in this tab accordingly.\nTab4.8\nAnnual change in forest land area to/from other IPCC land-use classes in the region. The table compares findings from the initial 10 years with most recent 10 years.\n- The pairs of columns for LAND._, TYPE._, and CHNG/FLC are not manipulated by a function but are used as-is. Ensure that both sets of columns for each pair, the _.USE and -.LISTED, columns, properly capture the data set’s listed labels and the desired labels.\nTab4.9\nAnnual change in carbon pools due to change in land use between forest and nonforest in the region. The table compares findings from the initial 10 years with most recent 10 years.\n- The columns FTC.LISTED and CHNG.4.9.USE are used as a pair; see notes for Tab4.8. Otherwise, there are no other table-specific comments for this table.\nTab4.10\nArea of forest land remaining forest land by ownership group and region.\n- No other table-specific columns.\nTab4.11\nArea of Forest Land by Forest Type, Owner Group and Forest Land Status for the entire region.\n- No other table-specific columns.\nTab4.12\nThis tab controls the creation of 4+ tables: Forest land carbon stock by ownership and land status, where results in MMT \\(CO_2e\\) and thousand acres by:\n* The entire region\n* All counties\n* All national forests\n* All forest practice districts or the equivalent (e.g., Oregon has Forest Practice Areas). The number of these is flexible but must correspond to avaliable CSV data.\n- DAT.FILE: The order of data files is Region (State), County, National Forests, and then one per Forest Practice District or equivalent.\n- The current script Tab4.12.R relies on the values within the CSV file column for carbon stock values (e.g., values include Live trees, Down wood, etc.). Hopefully the provided carbon stock value text in that column is similarly usable in future data sets provided by FIA.\nTab4.31\nForest carbon pools by 10-year inventory period. The table compares findings from the initial 10 years with most recent 10 years.\n- No other table-specific columns.\nTab4.32\nLive tree carbon stocks by ownership and land status. The table compares findings from the initial 10 years with most recent 10 years.\n- No other table-specific columns.\nTab4.33\nForest carbon stocks by ownership and land status. The table compares findings from the initial 10 years with most recent 10 years.\n- No other table-specific columns.\nTab6\nThis tab controls the creation of tables 6.5, 6.6, and 6.9. These three tables only summarize HWP values. Specifically, this tab is used to renames the HWP owner groups. The owner groups are column labels (not including the first column, “Year”) listed at the top of the ‘Harvest’ Excel tab for the HWP data input file. This table is described in the HWP documentation. For example, if there is an owner column for ‘Private and Tribal’, the table will be processed by the HWP code that the Forest Carbon Dashboard sources and the ownership name is transformed to “Private.and.Tribal”. Tab6 offers a remedy for strange HWP output names.\nTab7\nThis tab controls some caption content for tables 7.1, 7.2, and 7.3. All three of these table combine and summarize ecosystem carbon estimates with HWP estimates. The caption text is relevant to the reporting period of interest.\n\n\n\n\nChristensen, Glenn A, Andrew N Gray, Olaf Kuegler, Nadia A Tase, Mark Rosenberg, and Jeremy Groom. 2021. AB 1504 California Forest Ecosystem and Harvested Wood Product Carbon Inventory: 2019 Reporting Period Data Update. Sacramento, CA: California Department of Forestry; Fire Protection; California Board of Forestry; Fire Protection. https://bof.fire.ca.gov/media/beddx5bp/6-final_forest_ecosys_hwp_c_2019_feb2021_all_ada.pdf.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Preparing Your Data</span>"
    ]
  },
  {
    "objectID": "app_upload.html",
    "href": "app_upload.html",
    "title": "5  Uploading Your Data",
    "section": "",
    "text": "5.1 Overview\nThe Data Upload and Processing tab allows users to bring their own data into the dashboard and have the information displayed as figures and tables. The dashboard has been constructed such that it allows for specific data files to be missing. If a file is missing or fails to pass certain quality assessment checks then the tables and figures that rely upon that file will not be displayed but the app will continue to function.\nThe Data Upload and Processing tab depends on two input files from the user. The first is a zip file containing carbon flux, carbon stock, land area, and land conversion tables. This file contains the items described in Section 4.1.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Uploading Your Data</span>"
    ]
  },
  {
    "objectID": "comp_process.html",
    "href": "comp_process.html",
    "title": "6  Process Your Data Locally",
    "section": "",
    "text": "6.1 Running the standalone code\nThe standalone code is provided so that users may generate their tables and figures without the aid of the Shiny app. We recommend reading this text alongside the opened Stand_Alone.R file. The user needs to make a few changes for the script to work.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Process Your Data Locally</span>"
    ]
  },
  {
    "objectID": "comp_process.html#running-the-standalone-code",
    "href": "comp_process.html#running-the-standalone-code",
    "title": "6  Process Your Data Locally",
    "section": "",
    "text": "6.1.1 Code Outline\n\n\n\n\n\n\nFigure 6.1: Data and code source files associated with Stand_Alone.R\n\n\n\nThe Settings section in the standalone code relies on user input for reading data files correctly and sources the Functions.R script. If the user already has an RDS data file on hand, they can set options to skip the RDS-building step of ‘Create RDS File’.\nWithin the ‘Create RDS File’ step the code runs a QA of the provided data files. The QA_Code.R script reads the Script_Control.xlsx file for setting information to check against the CSV data files. The Excel_to_RDS.R builds the input RDS file from Script_Control.xlsx settings and the CSV data files. If the user provides information about an HWP data set, the Excel_to_RDS.R script will source the HWP_Run.R script to include HWP data in the RDS file. The RDS file is saved locally.\nThe ‘Read RDS file and load conditions’ section loads the RDS file and obtains settings from the RDS file. The standalone code can proceed with producing tables and figures. The ‘Produce figures and tables’ section sources individual figure and table scripts which each draw upon data from the RDS data file.\n\n\n6.1.2 Details for using the Standalone Code by Section\nSettings\nIn the subsection “Enter values”, users must enter the year.use value which is the year of their dataset.\nUsers must also enter the region.use value, their region name. Note that this will produce text that matches the user’s folder/RDS name.\nIf the user is loading existing data, the EXISTING.RDS needs to be set to TRUE. The script will look for the resulting RDS file. If EXISTING.RDS is set to FALSE, the script will attempt to read files and generate the RDS (giving it the name defined by DATA.FOLDER.NAME).\nIf the user is wanting to generate a fresh RDS from their parent data folder, we recommend placing that folder in the repository/project directory folder “Data/”. That will make things operate in a more straightforward manner.\nDoes the user want to have figure scripts save figures to a results folder? If so, SAVE.PNG option should be set to TRUE. This is an option because the Shiny app relies on the same figure code; there is no point for the figure code to internally save the images (users can download the figures from the app).\nThe ‘Other settings’ subsection provides R with information on where folders are located. If the user is relying on the project file structure provided by the GitHub repository (recommended) then the user need not alter anything in this sub section.\nLeave the SHINY.QA setting at FALSE. This allows the Standalone code to save the RDS file. If TRUE, the RDS file will not be saved. The logic is that when the Shiny code compiles the data and performs the QA checks, there is no sense in having the code save the RDS file to the Shinyapps.io instance. The app user can instead click on a button and download the RDS file.\nCreate RDS file\nThis code may be run whether or not a new RDS file is desired. The code will be skipped if a new RDS is not wanted. If used, the code will rely on the information from above (file names) when it sources the QA_Code.R file. This will run the QA routine and write the QA_Report_Table.csv file. This file can be informative for determining process errors.\nThe Excel_to_RDS.R script compiles the RDS file from the Script_Control.xlsx file, the CSV files, and (if selected and available) the output HWP files. The settings in the control file, Script_Controls.xlsx, will determine whether the HWP code is run and provide information for processing the tables and figures. The Excel_to_RDS.R script will save the output RDS file to the local directory.\nRead RDS File and Load Conditions\nThe script reads the RDS file that had been created earlier or was recently created by the code for the previous section. The script also checks to see if the FMRL and LU folders are empty. This information is used to determine which tables and figures to produce below.\nProduce Figures and Tables\nThe object tabfig.run is important. It will list which tables and figures the QA deems available. If a particular table or figure is not being produced (or produced with a ‘no data’ message) type in tabfig.run to see if the QA prevented the figure’s production, then backtrack to the QA_Report_Table.csv to see why this might be the case.\nAlmost every figure and table is sourced from a separate file. The exceptions are tables and figures that rely on the same code or function to generate them. Users will likely select to save figure .png files (see above). The table code saves individual XLSX documents.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Process Your Data Locally</span>"
    ]
  },
  {
    "objectID": "faq_troubleshooting.html",
    "href": "faq_troubleshooting.html",
    "title": "6  Frequently Asked Questions and Troubleshooting",
    "section": "",
    "text": "6.1 Things to be Fixed",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Frequently Asked Questions and Troubleshooting</span>"
    ]
  },
  {
    "objectID": "faq_troubleshooting.html#things-to-be-fixed",
    "href": "faq_troubleshooting.html#things-to-be-fixed",
    "title": "6  Frequently Asked Questions and Troubleshooting",
    "section": "",
    "text": "For tables, allow for null values for TAB.CAP to trigger code that removes reference to the repeated Appendix table (i.e., remove “See also” from the caption text).",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Frequently Asked Questions and Troubleshooting</span>"
    ]
  },
  {
    "objectID": "version_info.html",
    "href": "version_info.html",
    "title": "7  Version Information",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Version Information</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Christensen, Glenn A, Andrew N Gray, Olaf Kuegler, Nadia A Tase, Mark\nRosenberg, and Jeremy Groom. 2021. AB 1504 California Forest\nEcosystem and Harvested Wood Product Carbon Inventory: 2019 Reporting\nPeriod Data Update. Sacramento, CA: California Department of\nForestry; Fire Protection; California Board of Forestry; Fire\nProtection. https://bof.fire.ca.gov/media/beddx5bp/6-final_forest_ecosys_hwp_c_2019_feb2021_all_ada.pdf.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "app_usage.html#sec-dboarduse-figs",
    "href": "app_usage.html#sec-dboarduse-figs",
    "title": "3  Dashboard Summary and Use",
    "section": "3.2 Figures",
    "text": "3.2 Figures\nThe Figures tab offers different sub-tabs to explore the forest carbon data. Each sub-tab has different pull-down menus that provide different but related figures.\nEach sub-tab also provides buttons that allow users to download a .png image file (Download PNG), an RDS file (Download RDS), or a Microsoft Excel data file (Download Data (xlsx)) of the figure. The image file is the figure and caption as it appears. Users may want to alter the figure to meet their needs, however. In that case, they could be interested in downloading the RDS file of the figure. RDS stands for “R Data Structure”, and in this case it contains the ggplot object (package ggplot2, (Wickham 2016)). If the user downloads the RDS file and loads it into R, they can manipulate it like any other ggplot object.\nThe user can download the Excel file to view data, see exact values, and to plot the data using their own preferred approaches.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dashboard Summary and Use</span>"
    ]
  },
  {
    "objectID": "app_usage.html#sec-dboarduse-tables",
    "href": "app_usage.html#sec-dboarduse-tables",
    "title": "3  Dashboard Summary and Use",
    "section": "3.3 Tables",
    "text": "3.3 Tables\nLike the Figures tab, the Tables tab offers different sub-tabs to explore the forest carbon data. Each sub-tab has different pull-down menus providing related tables.\nBelow each displayed table are two buttons, Download CSV and Download DOCX. The Download CSV button allows users to download the compiled and arranged data table that was used to construct the table in the app. The user can plot those data, manipulate them, or create their own table. The Download DOCX button will download a single Microsoft Word document that contains the table. Users can edit the contents of the table.\nAll tables were created using the R package flextable by Gohel and Skintzos (2024). The package officer by Gohel and Moog (2024) enabled saving output as word documents.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dashboard Summary and Use</span>"
    ]
  },
  {
    "objectID": "app_usage.html#sec-dboarduse-docdnld",
    "href": "app_usage.html#sec-dboarduse-docdnld",
    "title": "3  Dashboard Summary and Use",
    "section": "3.4 Documentation and Data Upload",
    "text": "3.4 Documentation and Data Upload\nThe Documentation and Data Upload tab has five distinct sub-tabs. The Documentation sub-tab is a link to this documentation website. If you wish to dive deeper into this documentation you are welcome to visit and clone its GitHub repository. It is written in Quarto.\nThe GitHub Repository sub-tab is a link to the GitHub repository[[NEED TO SET UP, EDIT THIS]] for the source code and data sets for the app.\nThe Sample Zipped Data sub-tab will download the zipped 2021 California dataset for exploring the upload capabilities.\nThe Sample HWP Data sub-tab will download a Microsoft Excel file of the California 2021 Harvested Wood Products input dataset. To access the HWP data using the stand-alone version of the app, see Section 4.3.3.\nThe Upload Your Data sub-tab will allow you to bring your own data into the app. See Chapter 5. To practice uploading data, download the files from the two previously-mentioned sub-tabs.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dashboard Summary and Use</span>"
    ]
  },
  {
    "objectID": "app_usage.html#sec-dboarduse-cntct",
    "href": "app_usage.html#sec-dboarduse-cntct",
    "title": "3  Dashboard Summary and Use",
    "section": "3.5 Contact Us",
    "text": "3.5 Contact Us\nThis tab provides the contact information for the app creator, Jeremy Groom (Groom Analytics LLC) and his coauthor and project lead, Nadia Tase (California Department of Forestry and Fire Protection). Please reach out to Jeremy if you have technical questions about the dashboard, datasets, accessibility issues, or bugs.\n\n\n\n\nGohel, David, and Stefan Moog. 2024. Officer: Manipulation of Microsoft Word and PowerPoint Documents. https://CRAN.R-project.org/package=officer.\n\n\nGohel, David, and Panagiotis Skintzos. 2024. Flextable: Functions for Tabular Reporting. https://CRAN.R-project.org/package=flextable.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Dashboard Summary and Use</span>"
    ]
  },
  {
    "objectID": "data_prep.html#sec-dataprep-folder",
    "href": "data_prep.html#sec-dataprep-folder",
    "title": "4  Preparing Your Data",
    "section": "",
    "text": "Figure 4.1: Required structure of data input folders and the script control Excel file.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Preparing Your Data</span>"
    ]
  },
  {
    "objectID": "data_prep.html#sec-dataprep-features",
    "href": "data_prep.html#sec-dataprep-features",
    "title": "4  Preparing Your Data",
    "section": "4.2 Features of table and figure scripts",
    "text": "4.2 Features of table and figure scripts\nThe table and figure scripts were built with flexibility in mind.\n- CSV files provided by the FIA may change from year to year in column titles. The code finds key words or phrases in each target column and gives those columns specific names, which it then works with to create the figure or table.\n- The Script_Control.xlsx file allows users to control the terms that the table and figure scripts search for, use, and display. The scripts are built to be agnostic towards column values, relying entirely on what the user provides. The user must check columns to verify that the column values being sought exist and have not been altered.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Preparing Your Data</span>"
    ]
  },
  {
    "objectID": "data_prep.html#sec-dataprep-genctrl",
    "href": "data_prep.html#sec-dataprep-genctrl",
    "title": "4  Preparing Your Data",
    "section": "4.3 General data set and script control features",
    "text": "4.3 General data set and script control features\n\n4.3.1 Data set features\nThe CSV files provided by FIA staff may have extremely long file names. The names are so long that we recommend that users save the files close to their root directory. This hopefully allows users the ability of opening the CSV files. It is necessary for users to open these files so that they can verify that the items listed in Script_Control.xlsx tabs are accurate or need updated. The code in the app is constructed to search for files using a unique string that is shorter than the actual file name.\n\n\n4.3.2 Script control features\nThe file Script_Control.xlsx (Script Control) provides specific information to the app on how to label files, where to find files, how to cope with specific features of CSV data files, and what processes to run. There are three distinct parts to Script Control: the Global tab, Fig tabs, and Tab tabs.\nThe Global tab contains general information on the region and years to be examined, ecoregions and ownerships specific to users’ data, color palates to be used for ownerships, forest types, carbon stocks, Growth removal and mortality (GRM) fates, etc. There are also columns specific to running the Harvested Wood Products (HWP) model. These features help define aspects for all figures and tables, from caption text to figure colors and table categories.\nThe Fig tabs control all figures generated. Each Fig tab controls the creation of one or a few similar figures. The tabs provide information on what file names the code should search for, which folder to search in, specific figure text to provide, and figure control information.\nThe Tab tabs control all tables generated. Like the Fig tabs, the Tab tabs control the creation of one or a few tables. Many of the columns are the same and serve the same function as the Fig tabs. Some columns can offer specific information that is needed to generate a table. Some Tab tabs are used repeatedly on different data set or require the combination of separate data sets to produce a single table.\nTable and figure tabs were created around the tables and figures listed in Christensen et al. (2021). We recommend that users review that source (or the app output) to orient themselves regarding which data sets are relevant to which tables and figures.\n\n\n4.3.3 The Global Tab\nThis section describes important aspects of the Script Control’s Global Tab. The user should review and alter all of these settings to align with their data and needs.\n\nREGION: This is the name of the region in question. Specifically, as can be seen in Figure 4.1, the parent folder is named “California 2020”. The REGION for this fold is ‘California’. The user should set their REGION similarly.\nYEAR: Like REGION, this should be set to the appropriate year for the data and it will/is be part of the parent folder’s title.\nEARLY.YRS and CURRENT.YRS: Years are broken into two sets. CURRENT.YRS are the most recent ten years ending in YEAR. EARLY.YRS are the ten years prior to CURRENT.YRS.\nECOREGIONS: A list of ecoregions used within data sets and potentially in data CSV file names.\nOWNERSHIPS: This is a list of ownership names that show up repeatedly within CSV data files. Ensure that the spelling is consistent with data file values.\nOWNERSHIP.COLORS: The hexadecimal codes used for ownerships. Be sure the number of OWNERSHIP.COLORS matches OWNERSHIPS.\nRESERVED.TYPES, RESERVED.COLORS: Like OWNERSHIPS, these columns include forest type names by reserve status and the associated hexidecimal colors, respectively. Be sure the two columns are of equal length.\nSTOCKS, STOCK.COLORS: Like OWNERSHIPS, these columns include carbon stock types by physical location on the landscape (e.g., roots, standing dead) and their associated hexidecimal colors, respectively. Be sure the two columns are of equal length.\nGRM.TYPES, GRM.COLORS: Like OWNERSHIPS, these columns include carbon associated with stand growth/removal/mortality categories (e.g., Fire, Gross Tree Growth) and their associated hexidecimal colors, respectively. Be sure the two columns are of equal length.\nOWNERSHIP.RESERVED.TYPES, OWNERSHIP.RESERVED.COLORS: These columns list general ownership types that include public reserved and unreserved lands and their associated hexidecimal colors, respectively. Be sure the two columns are of equal length.\nRUN.HWP: This column indicates whether the app upload (Chapter 5) or stand-alone (Chapter 6) code should attempt to run the HWP model (TRUE) or forego running the model (FALSE). It is primarily useful for the stand-alone script run on one’s own computer. The app relies on users to select whether or not they want HWP data to be run, bypassing the importance of this setting.\nSOURCE.GIT: This setting is also only used in the stand-alone setting. Users may enter four options here: “OWN.DIR”, “CA”, “WA”, and “OR”. One of the three state abbreviations will cause the code to obtain the state’s HWP data from the HWP GitHub repository. “OWN.DIR” indicates that the user has their own HWP data they would like incorporated in the tables. The app by default selects “OWN.DIR”.\nOWN.HWP.DIR: This option also is only relevant for users running the stand-alone script. Under this column heading the user lists is the folder location and file name for the user’s HWP data when they entered “OWN.DIR” for the column “SOURCE.GIT”. We recommend placing the Excel file in the repository’s base file (wherever getwd() is for the project) and just listing the file’s Excel name; e.g., ‘Some_Data.xlsx’. This simplifies what is entered. For instance, entering ‘/MyData/Home/Some_Data.xlsx’ opens oneself up to problems (was that initial backslash needed? Is the file path full and correct? Is the file path in relation to the working directory or the main directory?).\n\n\n\n4.3.4 General Figure and Table Tab Settings\nWith the exceptions of Tab 6 and Tab 7, all table and figure tabs share certain columns.\n\nDAT.FILE: This is the unique string used to identify a data table used in a figure or table. For instance, Fig2.4 has a DAT.FILE listed as ‘Figure_2.4_Percent’. The data file names are usually much longer than the DAT.FILE entry.\nDAT.TABLE.LOC: The location of the data table is stated here. It is used to identify the folder listed in Figure 4.1 generically. Users can enter ‘CSV.STATUS’, ‘GRM.CSV’, ‘LU.CSV’, or ‘FMRL.CSV’. These generic versions of the folder names are used to facilitate code execution.\n\nDAT.FILE and DAT.TABLE.LOC are used together for opening CSV files. The DAT.FILE string is searched for in file names found in the DAT.TABLE.LOC folders. There can be multiple DAT.FILE files listed for certain tables and figures with a single DAT.TABLE.LOC (see Tab4.12 and Figure 4.12). Two data tables may be needed from different folders, in which case the DAT.FILE and DAT.TABLE.LOC can have entries that correspond by row. For Tab4.2a, DAT.FILE = ‘Table 4.2a_’ and ‘_LuseC’ while DAT.TABLE.LOC = ‘GRM.CSV’ and ‘LU.CSV’.\n\nFIG.NAME: This applies to figure tabs only. This value is the name of the figure that is to be produced and saved by the code. This value affects users running the stand-alone code, not the app.\nINCREMENT: Some figure tabs have this column. It represents the plotting increment to use on the y axis.\nIS_CO2e: Yes/No. This applies to some figure tabs. The associated figure code has option for providing results in \\(CO_2e\\) or \\(CO_2\\). The default setting is “Yes”, \\(CO_2e\\). This option was developed because previous versions of the figure were produced in \\(CO_2\\) but current reporting metrics rely on \\(CO_2e\\).\nTAB.CAP: This applies to some tables. There may be a reference to repeated tables in the appendix in which case this option controls the appendix reference.\n\nFrequently for a table or figure tab there will be groups of three columns with a heading of _.LISTED, _.USE, _.ORDER (e.g., OWNER.LISTED, OWNER.USE, OWNER.ORDER) that are specific to the table or figure’s parent data set. One table or figure can have more than one of these sets of columns. The _.LISTED column indicates the values listed in a column that are of interest. The _.USE column allows the user to specify how the _.LISTED items are displayed (e.g., “Private Corporate” instead of “Corporate”). The ._ORDER column allows the user to specify the display order of the items in a figure; this column is not always present. Note that the _.USE and _.ORDER columns may repeat values for different _.LISTED values, as the table or figure script is combining these values.\n\n4.3.4.1 Specific Figure Information\nBelow are descriptions of each figure and figure-specific settings.\nFig2.4\nPercent of forest land base by landowner and reserve status.\n- The columns ‘combine’ and ‘combine_order’ are used to lump certain combinations of ‘Ownership’, ‘ReservedStatus’, and ‘Forest Type’ with the category ‘Other Forest Land’. Some ownerships/reserved status combinations combine ‘Productive’ and ‘Timberland’ with ‘Other Forest Land’ and other combinations do not. These may be adjusted to suit user needs.\n- FOR.TYPE.LISTED: Note that there may be formatting issues with the provided CSV listed forest types. The code attempts to sidestep these peculiarities. The figure-producing script (Fig2.4.R) and associated functions (Functions.R) should be able to produce a working version of this figure without the \\xb9 text in this column.\nFig4.1 Region’s average annual net forestland \\(CO_2e\\) flux by owner, comparing findings from the initial 10 years with most recent 10 years.\n- No other figure-specific columns.\nFig4.2\nRegion’s average annual net forestland \\(CO_2e\\) flux by pool and owner, comparing findings from the initial 10 years with most recent 10 years.\n- POOL.LISTED: For California 2020 and 2021 data, the listed category ‘Foliage’ is not found by the QA, nor is it in the data set. It was present in earlier versions of the figure for California. The SC will still work and the figure will be plotted.\nFig4.3\nRegion’s average annual net timberland \\(CO_2e\\) flux by pool and owner, comparing findings from the initial 10 years with most recent 10 years.\n- No other figure-specific columns.\nFig4.4a\nRegion’s forestland average annual net \\(CO_2e\\) flux in above-ground live carbon by owner, comparing findings from the initial 10 years with most recent 10 years.\n- No other figure-specific columns.\nFig4.4b\nRegion’s timberland/reserved productive forestland average annual net \\(CO_2e\\) flux in above-ground live carbon by ownership, comparing findings from the initial 10 years with most recent 10 years.\n- No other figure-specific columns.\nFig4.6a\nEcoregions’ average annual net \\(CO_2e\\) flux by pool and owner, comparing findings from the initial 10 years with most recent 10 years.\n- This figure relies on several different CSV files, one per ecoregion.\n- Like Fig4.2, ‘Foliage’ does not appear in the data set but did appear in earlier versions of this figure for California.\nFig4.6b\nRegion forestland avera annual net \\(CO_2e\\) flux by ecoregion, comparing findings from the initial 10 years with most recent 10 years.\n- POOL.COLOR: This column provides hexcode color values for carbon pools.\nFig4.8\nRegion average forest carbon stock by owner, \\(CO_2e\\).\n- No other figure-specific columns.\nFig4.9_4.10 This tab provides information for the region’s average carbon stock by poo and owner (Figure 4.9) and land status and owner (Figure 4.10).\n- Both figures rely on the same CSV data set.\n- The columns POOL.LISTED1, POOL.LISTED2, POOL.USE, and POOL.ORD are used together but are not processed in the same fashion as other column sets (e.g., the OWNERS columns in this tab). POOL.LISTED1 and POOL.LISTED2 are used together to match with two columns in the CSV data in a left_join() function by the Fig4.9_4.10.R code.\nFig4.11\nRegion average forest carbon stock by land status and ecoregion.\n- No other figure-specific columns.\nFig4.12\nRegion average carbon stock by pool and forest type.\n- This tab is used to inform/produce Figure 4.12 as well as the ecoregion figures for A1.x.1 (x = ecoregion number, the combination references Appendix section A1, figure A1.x.1 in Christensen et al. (2021)). Under DAT.FILE the first file listed is for the entire region, the others reference specific ecoregions. Be sure the Global tab ecoregion order matches the order of ecoregion files under DAT.FILE.\n- The script produces two figures, one for \\(CO_2e\\) and the other for \\(CO_2\\).\nFig4.13\nRegion average carbon stock by land status and forest type, metric tons \\(CO_2\\) and \\(CO_2e\\) per acre.\n- This tab is used to inform/produce Figure 4.13 as well as the ecoregion figures for A1.x.2 (x = ecoregion number, the combination references Appendix section A1, figure A1.x.2 in Christensen et al. (2021)). Under DAT.FILE the first file listed is for the entire region, the others reference specific ecoregions. Be sure the Global tab ecoregion order matches the order of ecoregion files under DAT.FILE.\n- The script produces two figures, one for \\(CO_2e\\) and the other for \\(CO_2\\).\nFig4.14 Region carbon density by pool and forest type, metric tons \\(CO_2\\) and \\(CO_2e\\) per acre.\n- DAT.FILE: A carbon accounting CSV file and acreage data file are used to calculate metric tons per acre.\n- The script produces two figures, one for \\(CO_2e\\) and the other for \\(CO_2\\).\n\n\n4.3.4.2 Specific Table Information\nBelow are descriptions of each table and table-specific settings.\nTab4.1\nRegion average annual net \\(CO_2e\\) flux from forest pools in forest land remaining forest land, comparing findings from the initial 10 years with most recent 10 years.\n- NET.REMOVE: This value can be blank. In 2020 the California data set included a carbon pool value labeled ‘NET FLUX’. That row was not needed and was removed. Therefore, this entry serves to remove up to one carbon pool.\nTab4.2a\nRegion average annual net \\(CO_2e\\) flux from forest pools, non-\\(CO_2\\) emissions from forest fires in forest remaining forest land, and changes due to forest land conversion. The table compares findings from the initial 10 years with most recent 10 years.\n- DAT.FILE, DAT.TABLE.LOC: Two separate tables are required, one from the LU folder.\nTab4.2b\nAverage annual net \\(CO_2e\\) flux from forest ecosystem pools and non-CO2 emissions from forest fires in Forest land remaining forest land.\n- POOL4.2b.FPD.LEVELS: Note that the first entry here is “Forest Practice District”. See the associated table; this row will be blank. This column is not associated with the other POOL columns directly which is why it is OK that its length is or can be different.\nTab4.3\nRegion-wide estimate of average annual net carbon flux in \\(CO_2e\\) by pools and owner. Changes in \\(CO_2e\\) due to land-use and non-\\(CO_2\\) greenhouse gas emissions are not included. The table compares findings from the initial 10 years with most recent 10 years.\n- No other table-specific columns.\nTab4.6\nThis tab controls the creation of 4+ tables: Average Annual Net Change in Carbon Stocks for Aboveground Pools on Forest Land by Disturbance, Forest Land Status and Owner Group by:\n* The entire region\n* All counties\n* All national forests\n* All forest practice districts or the equivalent (e.g., Oregon has Forest Practice Areas). The number of these is flexible but must correspond to avaliable CSV data.\n- DAT.FILE: The order of data files is Region (State), County, National Forests, and then one per Forest Practice District or equivalent. - REG.COUNTIES.APP.TABLE.4.6 is a reference list that should probably have been listed as TAB.CAP. See TAB.CAP, above.\n- _.LEVELS columns are the ordered values from different columns. Users should be sure that their respective data column levels are captured here. There was not an effort to clean up displayed level names; names from the CSV file are used.\nTab4.7\nAnnual Net Emissions of Non-\\(CO_2\\) Greenhouse Gases from Fire; actually includes \\(CO_2\\).\n- The script sources Tab4.6.R because it combines information from that table with the CSV file listed for this table.\n- GENOWNER._, OWNER._, TYPE_ columns: These four columns are used together. The table has two ‘Total’ columns, one for private forest and one for everything (in the script this is referred to as the ‘Gen.Total’). The blank cells are filled in by the script as ‘Gen.Total’. This could be confusing, but the user should examine Table 4.7, this tab, and their CSV table and ensure that everything lines up. If not, the user should make adjustments to the values in this tab accordingly.\nTab4.8\nAnnual change in forest land area to/from other IPCC land-use classes in the region. The table compares findings from the initial 10 years with most recent 10 years.\n- The pairs of columns for LAND._, TYPE._, and CHNG/FLC are not manipulated by a function but are used as-is. Ensure that both sets of columns for each pair, the _.USE and -.LISTED, columns, properly capture the data set’s listed labels and the desired labels.\nTab4.9\nAnnual change in carbon pools due to change in land use between forest and nonforest in the region. The table compares findings from the initial 10 years with most recent 10 years.\n- The columns FTC.LISTED and CHNG.4.9.USE are used as a pair; see notes for Tab4.8. Otherwise, there are no other table-specific comments for this table.\nTab4.10\nArea of forest land remaining forest land by ownership group and region.\n- No other table-specific columns.\nTab4.11\nArea of Forest Land by Forest Type, Owner Group and Forest Land Status for the entire region.\n- No other table-specific columns.\nTab4.12\nThis tab controls the creation of 4+ tables: Forest land carbon stock by ownership and land status, where results in MMT \\(CO_2e\\) and thousand acres by:\n* The entire region\n* All counties\n* All national forests\n* All forest practice districts or the equivalent (e.g., Oregon has Forest Practice Areas). The number of these is flexible but must correspond to avaliable CSV data.\n- DAT.FILE: The order of data files is Region (State), County, National Forests, and then one per Forest Practice District or equivalent.\n- The current script Tab4.12.R relies on the values within the CSV file column for carbon stock values (e.g., values include Live trees, Down wood, etc.). Hopefully the provided carbon stock value text in that column is similarly usable in future data sets provided by FIA.\nTab4.31\nForest carbon pools by 10-year inventory period. The table compares findings from the initial 10 years with most recent 10 years.\n- No other table-specific columns.\nTab4.32\nLive tree carbon stocks by ownership and land status. The table compares findings from the initial 10 years with most recent 10 years.\n- No other table-specific columns.\nTab4.33\nForest carbon stocks by ownership and land status. The table compares findings from the initial 10 years with most recent 10 years.\n- No other table-specific columns.\nTab6\nThis tab controls the creation of tables 6.5, 6.6, and 6.9. These three tables only summarize HWP values. Specifically, this tab is used to renames the HWP owner groups. The owner groups are column labels (not including the first column, “Year”) listed at the top of the ‘Harvest’ Excel tab for the HWP data input file. This table is described in the HWP documentation. For example, if there is an owner column for ‘Private and Tribal’, the table will be processed by the HWP code that the Forest Carbon Dashboard sources and the ownership name is transformed to “Private.and.Tribal”. Tab6 offers a remedy for strange HWP output names.\nTab7\nThis tab controls some caption content for tables 7.1, 7.2, and 7.3. All three of these table combine and summarize ecosystem carbon estimates with HWP estimates. The caption text is relevant to the reporting period of interest.\n\n\n\n\nChristensen, Glenn A, Andrew N Gray, Olaf Kuegler, Nadia A Tase, Mark Rosenberg, and Jeremy Groom. 2021. AB 1504 California Forest Ecosystem and Harvested Wood Product Carbon Inventory: 2019 Reporting Period Data Update. Sacramento, CA: California Department of Forestry; Fire Protection; California Board of Forestry; Fire Protection. https://bof.fire.ca.gov/media/beddx5bp/6-final_forest_ecosys_hwp_c_2019_feb2021_all_ada.pdf.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Preparing Your Data</span>"
    ]
  }
]